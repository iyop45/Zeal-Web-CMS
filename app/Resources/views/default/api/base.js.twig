var zeal = (function() {
	this.token = {{ token|default('') }};
	this.url = 'http://92.232.235.0/api/';
	this._api = this.url + this.token ;	
	
	this._isLoggedIn = 0; // Bool for to determine users state
	this._user; // Object to hold users details
	this._accessToken; // Users session ID
	this._cachedUsers; // Cached user information  
	
	this.modules = {}
	
	this._pushModule = function (name, construct) {
	    this.modules.push({
	        name: name,
	        construct: construct
	    });        
	}
	
	this._getQueryVariable = function (variable) {
	       var query = window.location.search.substring(1);
	       var vars = query.split("&");
	       for (var i=0;i<vars.length;i++) {
	               var pair = vars[i].split("=");
	               if(pair[0] == variable){return pair[1];}
	       }
	       return(false);
	}
	
	this._createCookie = function(name, value, days) {
		if (days) {
		    var date = new Date();
		    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
		    var expires = "; expires=" + date.toGMTString();
		} else var expires = "";
		document.cookie = name + "=" + value + expires + "; path=/";
	}
	
	this._readCookie = function(name) {
		var nameEQ = name + "=";
		var ca = document.cookie.split(';');
		for (var i = 0; i < ca.length; i++) {
		    var c = ca[i];
		    while (c.charAt(0) == ' ') c = c.substring(1, c.length);
		    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
		}
		return null;
	}
	
	this._eraseCookie = function(name) {
		createCookie(name, "", -1);
	}
	
	this._loginCheck = function() {
		if (document.cookie.indexOf("AccessToken") >= 0) {
		    // Validate this token throught the API
		    var request = new XMLHttpRequest();
		    request.open('GET', this._API + '/' + this._readCookie('AccessToken'), true);
		
		    request.onload = function() {
		        if (request.status >= 200 && request.status < 400) {
		            // Success!
		            _user = JSON.parse(request.responseText);
		            _isLoggedIn = true;
		        } else {
		            // We reached our target server, but it returned an error
		            console.log('Failed to validate access token. #1');
		        }
		    };
		
		    request.onerror = function() {
		        // There was a connection error of some sort
		    };
		
		    request.send();
		} else {
		    console.log("No session ID cookie");
		    // Check if got an access token
		    var accessToken = this._getQueryVariable("AccessToken");
		    if(accessToken) {
		    	this._createCookie('AccessToken', accessToken, 7);
		    	this._loginCheck();
		    }
		}
	}    
	
	this._renderTemplates = function() {
		// Find all nodes with the 'zeal' class
		var obj = document.getElementsByClassName('zeal');
		var items = [].slice.call(obj);
		console.log(items.length + " templates to render");
		for (var i = 0, ilen = items.length; i < ilen; i++) {
		    console.log('Rendering a template...');
		    
		    // Get module name
		    var moduleName = items[i].dataset.module;
		
		    // Check if module is imported and if so call the function
		    for (var j = 0, jlen = this.modules.length; j < jlen; j++){
			    if (this.modules[j].name == moduleName && typeof this.modules[j].construct == 'function') {
			        this.modules[j].construct(items[i]); // Pass the node dependancy into the module 
			    } else {
			        console.log(this.modules[j] + ' module does not exist');
			    }
		    }
		
		    // Check to see if this module is installed...
		}
	}
	
	{% block modules %}{% endblock %}
	
})();
